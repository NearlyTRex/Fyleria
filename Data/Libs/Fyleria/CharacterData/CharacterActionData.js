/*autogenerated, do not edit*/
/*jshint esversion: 6*/
export class CharacterActionData {
    constructor(jsonData) {
        this.jsonData = jsonData;
    }
    get SlashPoints() {
        if ("SlashPoints" in this.jsonData) {
            return this.jsonData.SlashPoints;
        }
        else {
            return null;
        }
    }
    set SlashPoints(val) {
        this.jsonData.SlashPoints = val;
    }
    get SeverPoints() {
        if ("SeverPoints" in this.jsonData) {
            return this.jsonData.SeverPoints;
        }
        else {
            return null;
        }
    }
    set SeverPoints(val) {
        this.jsonData.SeverPoints = val;
    }
    get SlicePoints() {
        if ("SlicePoints" in this.jsonData) {
            return this.jsonData.SlicePoints;
        }
        else {
            return null;
        }
    }
    set SlicePoints(val) {
        this.jsonData.SlicePoints = val;
    }
    get SlitPoints() {
        if ("SlitPoints" in this.jsonData) {
            return this.jsonData.SlitPoints;
        }
        else {
            return null;
        }
    }
    set SlitPoints(val) {
        this.jsonData.SlitPoints = val;
    }
    get CleavePoints() {
        if ("CleavePoints" in this.jsonData) {
            return this.jsonData.CleavePoints;
        }
        else {
            return null;
        }
    }
    set CleavePoints(val) {
        this.jsonData.CleavePoints = val;
    }
    get DecapitatePoints() {
        if ("DecapitatePoints" in this.jsonData) {
            return this.jsonData.DecapitatePoints;
        }
        else {
            return null;
        }
    }
    set DecapitatePoints(val) {
        this.jsonData.DecapitatePoints = val;
    }
    get ParryPoints() {
        if ("ParryPoints" in this.jsonData) {
            return this.jsonData.ParryPoints;
        }
        else {
            return null;
        }
    }
    set ParryPoints(val) {
        this.jsonData.ParryPoints = val;
    }
    get RipostePoints() {
        if ("RipostePoints" in this.jsonData) {
            return this.jsonData.RipostePoints;
        }
        else {
            return null;
        }
    }
    set RipostePoints(val) {
        this.jsonData.RipostePoints = val;
    }
    get BashPoints() {
        if ("BashPoints" in this.jsonData) {
            return this.jsonData.BashPoints;
        }
        else {
            return null;
        }
    }
    set BashPoints(val) {
        this.jsonData.BashPoints = val;
    }
    get SmashPoints() {
        if ("SmashPoints" in this.jsonData) {
            return this.jsonData.SmashPoints;
        }
        else {
            return null;
        }
    }
    set SmashPoints(val) {
        this.jsonData.SmashPoints = val;
    }
    get ImpactPoints() {
        if ("ImpactPoints" in this.jsonData) {
            return this.jsonData.ImpactPoints;
        }
        else {
            return null;
        }
    }
    set ImpactPoints(val) {
        this.jsonData.ImpactPoints = val;
    }
    get CrushPoints() {
        if ("CrushPoints" in this.jsonData) {
            return this.jsonData.CrushPoints;
        }
        else {
            return null;
        }
    }
    set CrushPoints(val) {
        this.jsonData.CrushPoints = val;
    }
    get BreakPoints() {
        if ("BreakPoints" in this.jsonData) {
            return this.jsonData.BreakPoints;
        }
        else {
            return null;
        }
    }
    set BreakPoints(val) {
        this.jsonData.BreakPoints = val;
    }
    get CrackPoints() {
        if ("CrackPoints" in this.jsonData) {
            return this.jsonData.CrackPoints;
        }
        else {
            return null;
        }
    }
    set CrackPoints(val) {
        this.jsonData.CrackPoints = val;
    }
    get BlockPoints() {
        if ("BlockPoints" in this.jsonData) {
            return this.jsonData.BlockPoints;
        }
        else {
            return null;
        }
    }
    set BlockPoints(val) {
        this.jsonData.BlockPoints = val;
    }
    get RushPoints() {
        if ("RushPoints" in this.jsonData) {
            return this.jsonData.RushPoints;
        }
        else {
            return null;
        }
    }
    set RushPoints(val) {
        this.jsonData.RushPoints = val;
    }
    get PiercePoints() {
        if ("PiercePoints" in this.jsonData) {
            return this.jsonData.PiercePoints;
        }
        else {
            return null;
        }
    }
    set PiercePoints(val) {
        this.jsonData.PiercePoints = val;
    }
    get DrillPoints() {
        if ("DrillPoints" in this.jsonData) {
            return this.jsonData.DrillPoints;
        }
        else {
            return null;
        }
    }
    set DrillPoints(val) {
        this.jsonData.DrillPoints = val;
    }
    get ShootPoints() {
        if ("ShootPoints" in this.jsonData) {
            return this.jsonData.ShootPoints;
        }
        else {
            return null;
        }
    }
    set ShootPoints(val) {
        this.jsonData.ShootPoints = val;
    }
    get ImpalePoints() {
        if ("ImpalePoints" in this.jsonData) {
            return this.jsonData.ImpalePoints;
        }
        else {
            return null;
        }
    }
    set ImpalePoints(val) {
        this.jsonData.ImpalePoints = val;
    }
    get StealthStrikePoints() {
        if ("StealthStrikePoints" in this.jsonData) {
            return this.jsonData.StealthStrikePoints;
        }
        else {
            return null;
        }
    }
    set StealthStrikePoints(val) {
        this.jsonData.StealthStrikePoints = val;
    }
    get CriticalShotPoints() {
        if ("CriticalShotPoints" in this.jsonData) {
            return this.jsonData.CriticalShotPoints;
        }
        else {
            return null;
        }
    }
    set CriticalShotPoints(val) {
        this.jsonData.CriticalShotPoints = val;
    }
    get DodgePoints() {
        if ("DodgePoints" in this.jsonData) {
            return this.jsonData.DodgePoints;
        }
        else {
            return null;
        }
    }
    set DodgePoints(val) {
        this.jsonData.DodgePoints = val;
    }
    get CounterPoints() {
        if ("CounterPoints" in this.jsonData) {
            return this.jsonData.CounterPoints;
        }
        else {
            return null;
        }
    }
    set CounterPoints(val) {
        this.jsonData.CounterPoints = val;
    }
    get AvailableActions() {
        if ("AvailableActions" in this.jsonData) {
            return this.jsonData.AvailableActions;
        }
        else {
            return null;
        }
    }
    set AvailableActions(val) {
        this.jsonData.AvailableActions = val;
    }
}
